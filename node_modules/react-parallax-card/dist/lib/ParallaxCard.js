'use strict';

exports.__esModule = true;
exports.defaultParallaxSetter = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _style = require('styled-jsx/style');

var _style2 = _interopRequireDefault(_style);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash.throttle');

var _lodash2 = _interopRequireDefault(_lodash);

var _lodash3 = require('lodash.debounce');

var _lodash4 = _interopRequireDefault(_lodash3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ParallaxCard = function (_Component) {
  _inherits(ParallaxCard, _Component);

  function ParallaxCard(props) {
    _classCallCheck(this, ParallaxCard);

    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

    _this.state = {
      width: 0,
      height: 0,
      boundingClientRect: { top: 0, left: 0 },
      scale: 1,
      rotateX: 0,
      rotateY: 0,
      offsetX: 0,
      offsetY: 0,
      angle: 135,
      shineMidpointAlpha: 0
    };
    _this._element = undefined; // ref
    return _this;
  }

  ParallaxCard.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    // Helpers
    var init = function init() {
      var width = _this2._element.clientWidth || _this2._element.offsetWidth || _this2._element.scrollWidth;
      var height = _this2._element.clientHeight || _this2._element.offsetHeight || _this2._element.scrollHeight;
      var boundingClientRect = _this2._element.getBoundingClientRect();
      _this2.setState({ width: width, height: height, boundingClientRect: boundingClientRect });
      console.log('resize handled');
    };
    var handleReset = function handleReset() {
      _this2.setState({
        rotateX: 0,
        rotateY: 0,
        offsetX: 0,
        offsetY: 0,
        scale: 1,
        angle: 135,
        shineMidpointAlpha: 0
      });
      console.log('reset handled');
    };
    var handleMovement = function handleMovement(e) {
      return parallaxSetter({
        e: {
          pageX: e.touches && Array.isArray(e.touches) && e.touches[0] && e.touches[0].pageX || e.pageX,
          pageY: e.touches && Array.isArray(e.touches) && e.touches[0] && e.touches[0].pageY || e.pageY
        },
        state: _this2.state,
        setState: function setState(nextState) {
          return _this2.setState(nextState);
        },
        tiltMidpoint: tiltMidpoint,
        tiltX: tiltX,
        tiltY: tiltY
      });
    };

    // Set things and update on resize
    init();
    window.addEventListener('resize', (0, _lodash4.default)(init, 150, { leading: false }), { passive: true });
    window.addEventListener('resize', (0, _lodash4.default)(handleReset, 150, { leading: false }), { passive: true });

    // Rotate the card when a pointer interacts with it
    // TODO: mobile
    // TODO: evaluate raf performance
    var _props = this.props,
        _props$parallaxSetter = _props.parallaxSetter,
        parallaxSetter = _props$parallaxSetter === undefined ? defaultParallaxSetter : _props$parallaxSetter,
        tiltMidpoint = _props.tiltMidpoint,
        tiltX = _props.tiltX,
        tiltY = _props.tiltY;

    this._element.addEventListener('touchstart', (0, _lodash2.default)(handleMovement, 16));
    this._element.addEventListener('mousemove', (0, _lodash2.default)(handleMovement, 16));

    // Reset the card when a pointer leaves
    this._element.addEventListener('touchend', (0, _lodash4.default)(handleReset, 16, { leading: false }, { passive: true }));
    this._element.addEventListener('mouseleave', (0, _lodash4.default)(handleReset, 16, { leading: false }, { passive: true }));
  };

  ParallaxCard.prototype.render = function render() {
    var _this3 = this;

    var _props2 = this.props,
        _props2$className = _props2.className,
        className = _props2$className === undefined ? '' : _props2$className,
        _props2$layerContaine = _props2.layerContainerClassName,
        layerContainerClassName = _props2$layerContaine === undefined ? '' : _props2$layerContaine,
        children = _props2.children,
        layers = _props2.layers,
        _props2$enableRotate = _props2.enableRotate,
        enableRotate = _props2$enableRotate === undefined ? true : _props2$enableRotate,
        _props2$enableTransla = _props2.enableTranslate,
        enableTranslate = _props2$enableTransla === undefined ? true : _props2$enableTransla,
        distance = _props2.distance,
        parallaxFactor = _props2.parallaxFactor,
        parallaxSetter = _props2.parallaxSetter,
        tiltMidpoint = _props2.tiltMidpoint,
        tiltX = _props2.tiltX,
        tiltY = _props2.tiltY,
        label = _props2.label,
        hideLabel = _props2.hideLabel,
        rest = _objectWithoutProperties(_props2, ['className', 'layerContainerClassName', 'children', 'layers', 'enableRotate', 'enableTranslate', 'distance', 'parallaxFactor', 'parallaxSetter', 'tiltMidpoint', 'tiltX', 'tiltY', 'label', 'hideLabel']);

    var childCount = children && (Object.keys(children) || []).length;

    var containerStyle = {
      transform: 'rotateX(' + (enableRotate && this.state.rotateX) + 'deg)\n                  rotateY(' + (enableRotate && this.state.rotateY) + 'deg)\n                  scale3d(' + this.state.scale + ', ' + this.state.scale + ', ' + this.state.scale + ')'
    };
    var shineStyle = {
      backgroundImage: enableRotate ? 'linear-gradient(' + this.state.angle + 'deg,\n                           rgba(255, 255, 255, ' + this.state.shineMidpointAlpha + ') 0%,\n                           rgba(255, 255, 255, 0) 80%)' : ''
    };

    // Important to the parallax effect
    var translateXBasis = parallaxFactor * this.state.offsetX * this.state.width / 320;
    var translateYBasis = parallaxFactor * this.state.offsetY * this.state.height / 320;

    return _react2.default.createElement(
      'div',
      _extends({
        ref: function ref(_ref) {
          _this3._element = _ref;
        },
        className: 'ParallaxCard ' + className,
        style: _extends({}, this.props.style, { transform: 'perspective(' + distance + ')' })
      }, rest, {
        'data-jsx': 633904210
      }),
      _react2.default.createElement(_style2.default, {
        styleId: 633904210,
        css: '.ParallaxCard[data-jsx="633904210"] {box-sizing: border-box;margin: 0 0 2rem;padding: 0;border: none;border-radius: 0.3125rem;color: white;font-size: 1rem;line-height: 1rem;cursor: pointer;-webkit-transform-style: preserve-3d;-moz-transform-style: preserve-3d;-ms-transform-style: preserve-3d;transform-style: preserve-3d;will-change: transform;}.ParallaxCard-container[data-jsx="633904210"] {position: relative;-webkit-transform: rotate(0) scale3d(1, 1, 1);-moz-transform: rotate(0) scale3d(1, 1, 1);-ms-transform: rotate(0) scale3d(1, 1, 1);transform: rotate(0) scale3d(1, 1, 1);-webkit-transition: transform 500ms ease-out;-moz-transition: transform 500ms ease-out;-ms-transition: transform 500ms ease-out;transition: transform 500ms ease-out;}.ParallaxCard[data-jsx="633904210"]:hover .ParallaxCard-container[data-jsx="633904210"] {-webkit-transform: scale3d(1.07, 1.07, 1.07);-moz-transform: scale3d(1.07, 1.07, 1.07);-ms-transform: scale3d(1.07, 1.07, 1.07);transform: scale3d(1.07, 1.07, 1.07);-webkit-transition: transform 200ms ease-out;-moz-transition: transform 200ms ease-out;-ms-transition: transform 200ms ease-out;transition: transform 200ms ease-out;}.ParallaxCard-shadow[data-jsx="633904210"] {position: absolute;top: 5%;left: 5%;width: 90%;height: 90%;border-radius: 0.3125rem;box-shadow: 0 0.5rem 2rem rgba(14, 21, 47, 0.6);-webkit-transition: box-shadow 200ms ease-out;-moz-transition: box-shadow 200ms ease-out;-ms-transition: box-shadow 200ms ease-out;transition: box-shadow 200ms ease-out;}.ParallaxCard[data-jsx="633904210"]:hover .ParallaxCard-shadow[data-jsx="633904210"] {box-shadow: 0 2.8125rem 6.25rem rgba(14, 21, 47, 0.4), 0 16px 40px rgba(14, 21, 47, 0.4);}.ParallaxCard-layers[data-jsx="633904210"] {position: relative;width: 100%;height: 100%;border-radius: 0.3125rem;overflow: hidden;-webkit-transform-style: preserve-3d;-moz-transform-style: preserve-3d;-ms-transform-style: preserve-3d;transform-style: preserve-3d;}.ParallaxCard-layers[data-jsx="633904210"]:before,.ParallaxCard-layers[data-jsx="633904210"]:after {content: " ";display: table;}.ParallaxCard-layers[data-jsx="633904210"]:after {clear: both;}.ParallaxCard-layers[data-jsx="633904210"] {*zoom: 1;}.ParallaxCard-label[data-jsx="633904210"] {position: absolute;top: 100%;width: 100%;height: 2rem;line-height: 2rem;font-size: 1rem;color: #bfbfbf;-webkit-transition-delay: 0ms;-moz-transition-delay: 0ms;-ms-transition-delay: 0ms;transition-delay: 0ms;}.ParallaxCard[data-jsx="633904210"]:hover .ParallaxCard-label[data-jsx="633904210"] {font-weight: bold;-webkit-transform: translateY(10%);-moz-transform: translateY(10%);-ms-transform: translateY(10%);transform: translateY(10%);-webkit-transition-delay: 25ms;-moz-transition-delay: 25ms;-ms-transition-delay: 25ms;transition-delay: 25ms;}.ParallaxCard-shine[data-jsx="633904210"] {position: absolute;top: 0;left: 0;width: 100%;height: 100%;border-radius: 0.3125rem;background: linear-gradient(135deg, rgba(255, 255, 255, 0.25) 0%,rgba(255, 255, 255, 0) 60%);will-change: background;pointer-events: none;}'
      }),
      _react2.default.createElement(
        'div',
        { className: 'ParallaxCard-container', style: containerStyle, 'data-jsx': 633904210
        },
        _react2.default.createElement('div', { className: 'ParallaxCard-shadow', 'data-jsx': 633904210
        }),
        _react2.default.createElement(
          'div',
          { className: 'ParallaxCard-layers ' + layerContainerClassName, 'data-jsx': 633904210
          },
          childCount > 0 && Object.keys(children).map(function (key, i) {
            var style = _extends({
              position: i === 0 ? 'inherit' : 'absolute',
              top: 0,
              borderRadius: i === 0 ? 5 : 'inherit'
            }, children[key].props.style, {
              willChange: 'transform',
              transition: 'transform 100ms ease-out',
              transform: 'translateX(' + (enableTranslate && translateXBasis * (childCount - i)) + 'px)\n                            translateY(' + (enableTranslate && translateYBasis * childCount) + 'px)\n                            ' + (enableTranslate && i === 0 && 'scale(1.1)')
            });

            return _react2.default.cloneElement(children[key], { key: i, style: style });
          })
        ),
        enableRotate && _react2.default.createElement('div', { className: 'ParallaxCard-shine', style: shineStyle, 'data-jsx': 633904210
        })
      ),
      label && !hideLabel && _react2.default.createElement(
        'div',
        {
          className: 'ParallaxCard-label',
          style: { transform: 'perspective(' + distance + ')' }, 'data-jsx': 633904210
        },
        label
      )
    );
  };

  return ParallaxCard;
}(_react.Component);

process.env.NODE_ENV !== "production" ? ParallaxCard.propTypes = {
  className: _react.PropTypes.string,
  layerContainerClassName: _react.PropTypes.string,
  label: _react.PropTypes.string,
  hideLabel: _react.PropTypes.bool,
  enableRotate: _react.PropTypes.bool,
  enableTranslate: _react.PropTypes.bool,
  distance: _react.PropTypes.string,
  tiltMidpoint: _react.PropTypes.number,
  tiltX: _react.PropTypes.number,
  tiltY: _react.PropTypes.number,
  parallaxSetter: _react.PropTypes.func,
  parallaxFactor: _react.PropTypes.number,
  children: _react.PropTypes.node
} : void 0;

ParallaxCard.defaultProps = {
  hideLabel: false,
  children: {},
  enableRotate: true,
  enableTranslate: true,
  distance: '60rem',
  tiltMidpoint: 0.52,
  tiltX: 0.1,
  tiltY: 0.07,
  parallaxFactor: 2.5
};

exports.default = ParallaxCard;
var defaultParallaxSetter = exports.defaultParallaxSetter = function defaultParallaxSetter(props) {
  var _ref2 = props || {},
      _ref2$e = _ref2.e,
      preventDefault = _ref2$e.preventDefault,
      stopPropagation = _ref2$e.stopPropagation,
      pageX = _ref2$e.pageX,
      pageY = _ref2$e.pageY,
      _ref2$state = _ref2.state,
      width = _ref2$state.width,
      height = _ref2$state.height,
      _ref2$state$boundingC = _ref2$state.boundingClientRect,
      top = _ref2$state$boundingC.top,
      left = _ref2$state$boundingC.left,
      _ref2$tiltMidpoint = _ref2.tiltMidpoint,
      tiltMidpoint = _ref2$tiltMidpoint === undefined ? 0.52 : _ref2$tiltMidpoint,
      _ref2$tiltX = _ref2.tiltX,
      tiltX = _ref2$tiltX === undefined ? 0.1 : _ref2$tiltX,
      _ref2$tiltY = _ref2.tiltY,
      tiltY = _ref2$tiltY === undefined ? 0.07 : _ref2$tiltY,
      setState = _ref2.setState;

  var _document$body = document.body,
      scrollTop = _document$body.scrollTop,
      scrollLeft = _document$body.scrollLeft;

  // Other interactions
  // preventDefault()
  // stopPropagation()

  // algo shoutout https://github.com/drewwilson/atvImg/blob/master/atvImg.js

  var offsetX = tiltMidpoint - (pageX - left - scrollLeft) / width;
  var offsetY = tiltMidpoint - (pageY - top - scrollTop) / height;
  var comX = pageX - left - scrollLeft - width / 2.0;
  var comY = pageY - top - scrollTop - height / 2.0;
  var rotateX = (comY - offsetY) * tiltX * 320 / width;
  var rotateY = (offsetX - comX) * tiltY * 320 / width;
  var scale = 1.07;
  var angle = Math.atan2(comY, comX) * 180 / Math.PI - 90;
  var shineMidpointAlpha = (pageY - top - scrollTop) / height * 0.4;
  var computedProps = { rotateX: rotateX, rotateY: rotateY, offsetX: offsetX, offsetY: offsetY, scale: scale, angle: angle, shineMidpointAlpha: shineMidpointAlpha };
  // console.log(computedProps)
  setState(computedProps);
};